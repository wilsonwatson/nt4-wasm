
plugins {
    id 'java-library'
    id "edu.wpi.first.GradleRIO" version "2023.4.3"
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

def version_major = 0
def version_minor = 1

def username = "wilsonwatson"
def group = "org." + username
def artifact = System.getenv('PATCH') == null ? "nt4wasm" : "nt4wasm_bleeding_edge"
def version_str = version_major + "." + version_minor + "." + (System.getenv('PATCH') == null ? "0" : System.getenv('PATCH'))

task check_minor_bump {
    doLast {
        if (System.getenv("GITHUB_TOKEN") != null) {
            // check if version_minor is bumped
            def req = new URL("https://api.github.com/users/" + username + "/packages/maven/" + group + "." + artifact + "/versions").openConnection()
            req.setRequestMethod("GET")
            req.setRequestProperty("Content-Type", "application/vnd.github+json")
            req.setRequestProperty("Authorization", "Bearer " + System.getenv("GITHUB_TOKEN"))
            req.setRequestProperty("X-GitHub-Api-Version", "2022-11-28")
            req.setDoOutput(true)
            req.getOutputStream().write()
            logger.quiet "Status code: ${req.getResponseCode()}" // HTTP request done on first read
            def resp = req.getInputStream().getText()
            logger.quiet "Response: ${resp}"
        }
    }
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

dependencies {
    implementation wpi.java.deps.wpilib()
    // implementation wpi.java.vendor.java()

    implementation "io.javalin:javalin:5.6.1"
}

task buildWasm(type: Exec) {
    workingDir '.'
    commandLine 'wasm-pack', 'build', '--target', 'no-modules'

    doLast {
        def toConcatenate = files("pkg/nt4_wasm.js", "src/next_part.js");
        def outputFileName = "pkg/nt4.js"
        def output = new File(outputFileName)
        output.write('') // clear
        toConcatenate.each { f -> output << f.text }
    }

    dependsOn(check_minor_bump)
}

tasks.jar.dependsOn(buildWasm)

jar {
    from('pkg') {
        include('nt4_wasm_bg.wasm')
        include('nt4.js')
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

println "building \"" + group + ":" + artifact + ":" + version_str + "\""

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = artifact
            version = version_str

            from components.java
        }
    }

    repositories {
        maven {
            name = "GithubPackages"
            url = "https://maven.pkg.github.com/wilsonwatson/nt4-wasm"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
